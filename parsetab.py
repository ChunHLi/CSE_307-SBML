
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftDISJUNCTIONleftCONJUNCTIONleftGTGTEEQUALNEQUALLTELTleftNEGATIONleftMEMBERleftSUBTRACTIONADDITIONleftMODULUSINTDIVISIONDIVISIONMULTIPLICATIONrightCONSrightEXPONENTIATIONrightINDEXTUPESleftLBRACKETleftLPARENrightUMINUSADDITION ASSIGN BOOLEAN COMMA CONJUNCTION CONS DISJUNCTION DIVISION ELSE EQUAL EXPONENTIATION GT GTE IF INDEXTUPES INTDIVISION INT_VAL LBRACE LBRACKET LPAREN LT LTE MEMBER MODULUS MULTIPLICATION NAME NEGATION NEQUAL PRINT RBRACE RBRACKET REAL_VAL RPAREN SEMICOLON STRING SUBTRACTION WHILE\n    start : statement-list\n          | block\n    block : LBRACE statement-list RBRACE\n    statement-list : statement statement-list\n    statement-list : empty\n    statement : expression SEMICOLON\n              | var_assign SEMICOLON\n    statement : WHILE LPAREN expression RPAREN blockstatement : IF LPAREN expression RPAREN block ELSE blockstatement : IF LPAREN expression RPAREN blockexpression : PRINT LPAREN expression RPARENvar_assign : expression ASSIGN expressionexpression : INDEXTUPES expression LPAREN tuple RPARENexpression : LPAREN tuple RPAREN\n    tuple : expression COMMA tuple\n    \n    tuple : empty\n    expression : expression LBRACKET expression RBRACKETexpression : LBRACKET list RBRACKET\n    list : expression list_tail\n    \n    list : empty\n    \n    list_tail : COMMA expression list_tail\n    \n    list_tail : empty\n    \n    empty :\n    \n    expression : INT_VAL\n    \n    expression : REAL_VAL\n    \n    expression : STRING\n    \n    expression : BOOLEAN\n    expression : NAMEexpression : expression ADDITION expressionexpression : expression SUBTRACTION expressionexpression : SUBTRACTION expression %prec UMINUSexpression : expression MULTIPLICATION expressionexpression : expression DIVISION expressionexpression : expression EXPONENTIATION expressionexpression : expression MODULUS expressionexpression : expression INTDIVISION expressionexpression : expression MEMBER expressionexpression : expression CONS expressionexpression : expression CONJUNCTION expressionexpression : expression DISJUNCTION expressionexpression : expression EQUAL expressionexpression : expression NEQUAL expressionexpression : expression GTE expressionexpression : expression GT expressionexpression : expression LTE expressionexpression : expression LT expressionexpression : NEGATION expressionexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'LBRACE':([0,89,92,100,],[6,6,6,6,]),'WHILE':([0,4,6,24,44,57,96,97,101,],[9,9,9,-6,-7,-3,-8,-10,-9,]),'IF':([0,4,6,24,44,57,96,97,101,],[11,11,11,-6,-7,-3,-8,-10,-9,]),'$end':([0,1,2,3,4,5,22,24,44,57,96,97,101,],[-23,0,-1,-2,-23,-5,-4,-6,-7,-3,-8,-10,-9,]),'PRINT':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[12,12,12,12,12,12,12,12,-6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-7,12,12,12,-3,12,12,12,-8,-10,-9,]),'INDEXTUPES':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[13,13,13,13,13,13,13,13,-6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-7,13,13,13,-3,13,13,13,-8,-10,-9,]),'LPAREN':([0,4,6,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,83,84,86,88,93,96,97,98,101,],[10,10,10,45,10,49,50,10,10,-24,-25,-26,-27,-28,10,10,-6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-7,10,10,10,83,-31,-47,-3,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-14,-48,10,10,-18,10,-17,-11,-8,-10,-13,-9,]),'LBRACKET':([0,4,6,7,10,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,90,93,95,96,97,98,101,],[14,14,14,25,14,14,14,-24,-25,-26,-27,-28,14,14,-6,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-7,14,25,14,14,25,25,-31,25,-3,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-14,-48,14,25,25,14,-18,14,-17,25,-11,25,-8,-10,-13,-9,]),'INT_VAL':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[15,15,15,15,15,15,15,15,-6,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-7,15,15,15,-3,15,15,15,-8,-10,-9,]),'REAL_VAL':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[16,16,16,16,16,16,16,16,-6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-7,16,16,16,-3,16,16,16,-8,-10,-9,]),'STRING':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[17,17,17,17,17,17,17,17,-6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-7,17,17,17,-3,17,17,17,-8,-10,-9,]),'BOOLEAN':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[18,18,18,18,18,18,18,18,-6,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-7,18,18,18,-3,18,18,18,-8,-10,-9,]),'NAME':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[19,19,19,19,19,19,19,19,-6,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-7,19,19,19,-3,19,19,19,-8,-10,-9,]),'SUBTRACTION':([0,4,6,7,10,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,90,93,95,96,97,98,101,],[20,20,20,27,20,20,20,-24,-25,-26,-27,-28,20,20,-6,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-7,20,27,20,20,27,27,-31,27,-3,27,-29,-30,-32,-33,-34,-35,-36,27,-38,27,27,27,27,27,27,27,27,27,27,-14,-48,20,27,27,20,-18,20,-17,27,-11,27,-8,-10,-13,-9,]),'NEGATION':([0,4,6,10,13,14,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,57,80,83,86,96,97,101,],[21,21,21,21,21,21,21,21,-6,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-7,21,21,21,-3,21,21,21,-8,-10,-9,]),'RBRACE':([4,5,6,22,23,24,44,57,96,97,101,],[-23,-5,-23,-4,57,-6,-7,-3,-8,-10,-9,]),'SEMICOLON':([7,8,15,16,17,18,19,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,84,88,93,98,],[24,44,-24,-25,-26,-27,-28,-31,-47,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-12,-14,-48,-18,-17,-11,-13,]),'ADDITION':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[26,-24,-25,-26,-27,-28,26,26,26,-31,26,26,-29,-30,-32,-33,-34,-35,-36,26,-38,26,26,26,26,26,26,26,26,26,26,-14,-48,26,26,-18,-17,26,-11,26,-13,]),'MULTIPLICATION':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[28,-24,-25,-26,-27,-28,28,28,28,-31,28,28,28,28,-32,-33,-34,-35,-36,28,-38,28,28,28,28,28,28,28,28,28,28,-14,-48,28,28,-18,-17,28,-11,28,-13,]),'DIVISION':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[29,-24,-25,-26,-27,-28,29,29,29,-31,29,29,29,29,-32,-33,-34,-35,-36,29,-38,29,29,29,29,29,29,29,29,29,29,-14,-48,29,29,-18,-17,29,-11,29,-13,]),'EXPONENTIATION':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[30,-24,-25,-26,-27,-28,30,30,30,-31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-14,-48,30,30,-18,-17,30,-11,30,-13,]),'MODULUS':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[31,-24,-25,-26,-27,-28,31,31,31,-31,31,31,31,31,-32,-33,-34,-35,-36,31,-38,31,31,31,31,31,31,31,31,31,31,-14,-48,31,31,-18,-17,31,-11,31,-13,]),'INTDIVISION':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[32,-24,-25,-26,-27,-28,32,32,32,-31,32,32,32,32,-32,-33,-34,-35,-36,32,-38,32,32,32,32,32,32,32,32,32,32,-14,-48,32,32,-18,-17,32,-11,32,-13,]),'MEMBER':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[33,-24,-25,-26,-27,-28,33,33,33,-31,33,33,-29,-30,-32,-33,-34,-35,-36,-37,-38,33,33,33,33,33,33,33,33,33,33,-14,-48,33,33,-18,-17,33,-11,33,-13,]),'CONS':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[34,-24,-25,-26,-27,-28,34,34,34,-31,34,34,34,34,34,34,-34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-14,-48,34,34,-18,-17,34,-11,34,-13,]),'CONJUNCTION':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[35,-24,-25,-26,-27,-28,35,35,35,-31,-47,35,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,35,-41,-42,-43,-44,-45,-46,35,35,-14,-48,35,35,-18,-17,35,-11,35,-13,]),'DISJUNCTION':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[36,-24,-25,-26,-27,-28,36,36,36,-31,-47,36,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,36,36,-14,-48,36,36,-18,-17,36,-11,36,-13,]),'EQUAL':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[37,-24,-25,-26,-27,-28,37,37,37,-31,-47,37,-29,-30,-32,-33,-34,-35,-36,-37,-38,37,37,-41,-42,-43,-44,-45,-46,37,37,-14,-48,37,37,-18,-17,37,-11,37,-13,]),'NEQUAL':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[38,-24,-25,-26,-27,-28,38,38,38,-31,-47,38,-29,-30,-32,-33,-34,-35,-36,-37,-38,38,38,-41,-42,-43,-44,-45,-46,38,38,-14,-48,38,38,-18,-17,38,-11,38,-13,]),'GTE':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[39,-24,-25,-26,-27,-28,39,39,39,-31,-47,39,-29,-30,-32,-33,-34,-35,-36,-37,-38,39,39,-41,-42,-43,-44,-45,-46,39,39,-14,-48,39,39,-18,-17,39,-11,39,-13,]),'GT':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[40,-24,-25,-26,-27,-28,40,40,40,-31,-47,40,-29,-30,-32,-33,-34,-35,-36,-37,-38,40,40,-41,-42,-43,-44,-45,-46,40,40,-14,-48,40,40,-18,-17,40,-11,40,-13,]),'LTE':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[41,-24,-25,-26,-27,-28,41,41,41,-31,-47,41,-29,-30,-32,-33,-34,-35,-36,-37,-38,41,41,-41,-42,-43,-44,-45,-46,41,41,-14,-48,41,41,-18,-17,41,-11,41,-13,]),'LT':([7,15,16,17,18,19,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,84,88,90,93,95,98,],[42,-24,-25,-26,-27,-28,42,42,42,-31,-47,42,-29,-30,-32,-33,-34,-35,-36,-37,-38,42,42,-41,-42,-43,-44,-45,-46,42,42,-14,-48,42,42,-18,-17,42,-11,42,-13,]),'ASSIGN':([7,15,16,17,18,19,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,84,88,93,98,],[43,-24,-25,-26,-27,-28,-31,-47,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-14,-48,-18,-17,-11,-13,]),'RPAREN':([10,15,16,17,18,19,46,47,48,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,88,91,93,94,98,],[-23,-24,-25,-26,-27,-28,78,79,-16,-31,-47,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,89,-14,-48,-23,92,93,-23,-18,-17,-15,-11,98,-13,]),'RBRACKET':([14,15,16,17,18,19,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,84,85,87,88,93,95,98,99,],[-23,-24,-25,-26,-27,-28,84,-23,-20,-31,-47,88,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-14,-48,-18,-19,-22,-17,-11,-23,-13,-21,]),'COMMA':([15,16,17,18,19,47,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,84,88,90,93,95,98,],[-24,-25,-26,-27,-28,80,86,-31,-47,-29,-30,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-14,-48,-18,-17,80,-11,86,-13,]),'ELSE':([57,97,],[-3,100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'statement-list':([0,4,6,],[2,22,23,]),'block':([0,89,92,100,],[3,96,97,101,]),'statement':([0,4,6,],[4,4,4,]),'empty':([0,4,6,10,14,53,80,83,95,],[5,5,5,48,54,87,48,48,87,]),'expression':([0,4,6,10,13,14,20,21,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,49,50,80,83,86,],[7,7,7,47,51,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,82,90,90,95,]),'var_assign':([0,4,6,],[8,8,8,]),'tuple':([10,80,83,],[46,91,94,]),'list':([14,],[52,]),'list_tail':([53,95,],[85,99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statement-list','start',1,'p_start','sbml.py',729),
  ('start -> block','start',1,'p_start','sbml.py',730),
  ('block -> LBRACE statement-list RBRACE','block',3,'p_block','sbml.py',736),
  ('statement-list -> statement statement-list','statement-list',2,'p_statement_list','sbml.py',742),
  ('statement-list -> empty','statement-list',1,'p_statement_list_empty','sbml.py',750),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expression','sbml.py',756),
  ('statement -> var_assign SEMICOLON','statement',2,'p_statement_expression','sbml.py',757),
  ('statement -> WHILE LPAREN expression RPAREN block','statement',5,'p_statement_while','sbml.py',763),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_statement_else','sbml.py',770),
  ('statement -> IF LPAREN expression RPAREN block','statement',5,'p_statement_if','sbml.py',778),
  ('expression -> PRINT LPAREN expression RPAREN','expression',4,'p_print_call','sbml.py',785),
  ('var_assign -> expression ASSIGN expression','var_assign',3,'p_var_assign_expression','sbml.py',791),
  ('expression -> INDEXTUPES expression LPAREN tuple RPAREN','expression',5,'p_tuple_indexing','sbml.py',798),
  ('expression -> LPAREN tuple RPAREN','expression',3,'p_expression_tuple','sbml.py',805),
  ('tuple -> expression COMMA tuple','tuple',3,'p_tuple','sbml.py',811),
  ('tuple -> empty','tuple',1,'p_tuple_none','sbml.py',820),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_list_indexing','sbml.py',826),
  ('expression -> LBRACKET list RBRACKET','expression',3,'p_expression_list','sbml.py',833),
  ('list -> expression list_tail','list',2,'p_list','sbml.py',839),
  ('list -> empty','list',1,'p_list_none','sbml.py',848),
  ('list_tail -> COMMA expression list_tail','list_tail',3,'p_list_tail','sbml.py',855),
  ('list_tail -> empty','list_tail',1,'p_list_tail_none','sbml.py',864),
  ('empty -> <empty>','empty',0,'p_empty','sbml.py',871),
  ('expression -> INT_VAL','expression',1,'p_expression_int','sbml.py',878),
  ('expression -> REAL_VAL','expression',1,'p_expression_real','sbml.py',885),
  ('expression -> STRING','expression',1,'p_expression_string','sbml.py',892),
  ('expression -> BOOLEAN','expression',1,'p_expression_boolean','sbml.py',899),
  ('expression -> NAME','expression',1,'p_expression_name','sbml.py',905),
  ('expression -> expression ADDITION expression','expression',3,'p_expression_addition','sbml.py',910),
  ('expression -> expression SUBTRACTION expression','expression',3,'p_expression_subtraction','sbml.py',917),
  ('expression -> SUBTRACTION expression','expression',2,'p_expression_uminus','sbml.py',924),
  ('expression -> expression MULTIPLICATION expression','expression',3,'p_expression_multiplication','sbml.py',930),
  ('expression -> expression DIVISION expression','expression',3,'p_expression_division','sbml.py',937),
  ('expression -> expression EXPONENTIATION expression','expression',3,'p_expression_exponentiation','sbml.py',944),
  ('expression -> expression MODULUS expression','expression',3,'p_expression_modulus','sbml.py',951),
  ('expression -> expression INTDIVISION expression','expression',3,'p_expression_intdivision','sbml.py',958),
  ('expression -> expression MEMBER expression','expression',3,'p_expression_member','sbml.py',965),
  ('expression -> expression CONS expression','expression',3,'p_expression_cons','sbml.py',972),
  ('expression -> expression CONJUNCTION expression','expression',3,'p_expression_conjunction','sbml.py',979),
  ('expression -> expression DISJUNCTION expression','expression',3,'p_expression_disjunction','sbml.py',986),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','sbml.py',993),
  ('expression -> expression NEQUAL expression','expression',3,'p_expression_nequal','sbml.py',1000),
  ('expression -> expression GTE expression','expression',3,'p_expression_gte','sbml.py',1007),
  ('expression -> expression GT expression','expression',3,'p_expression_gt','sbml.py',1014),
  ('expression -> expression LTE expression','expression',3,'p_expression_lte','sbml.py',1021),
  ('expression -> expression LT expression','expression',3,'p_expression_lt','sbml.py',1028),
  ('expression -> NEGATION expression','expression',2,'p_expression_negation','sbml.py',1035),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthetical','sbml.py',1041),
]
