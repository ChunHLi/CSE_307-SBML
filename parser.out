Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> statement-list
Rule 2     statement-list -> LBRACE statement-list RBRACE
Rule 3     statement-list -> statement statement-list
Rule 4     statement-list -> empty
Rule 5     statement -> expression SEMICOLON
Rule 6     statement -> var_assign SEMICOLON
Rule 7     expression -> PRINT LPAREN expression RPAREN
Rule 8     var_assign -> expression ASSIGN expression
Rule 9     expression -> INDEXTUPES expression LPAREN tuple RPAREN
Rule 10    expression -> LPAREN tuple RPAREN
Rule 11    tuple -> expression COMMA tuple
Rule 12    tuple -> empty
Rule 13    expression -> expression LBRACKET expression RBRACKET
Rule 14    expression -> LBRACKET list RBRACKET
Rule 15    list -> expression list_tail
Rule 16    list -> empty
Rule 17    list_tail -> COMMA expression list_tail
Rule 18    list_tail -> empty
Rule 19    empty -> <empty>
Rule 20    expression -> INT_VAL
Rule 21    expression -> REAL_VAL
Rule 22    expression -> STRING
Rule 23    expression -> BOOLEAN
Rule 24    expression -> NAME
Rule 25    expression -> expression ADDITION expression
Rule 26    expression -> expression SUBTRACTION expression
Rule 27    expression -> SUBTRACTION expression
Rule 28    expression -> expression MULTIPLICATION expression
Rule 29    expression -> expression DIVISION expression
Rule 30    expression -> expression EXPONENTIATION expression
Rule 31    expression -> expression MODULUS expression
Rule 32    expression -> expression INTDIVISION expression
Rule 33    expression -> expression MEMBER expression
Rule 34    expression -> expression CONS expression
Rule 35    expression -> expression CONJUNCTION expression
Rule 36    expression -> expression DISJUNCTION expression
Rule 37    expression -> expression EQUAL expression
Rule 38    expression -> expression NEQUAL expression
Rule 39    expression -> expression GTE expression
Rule 40    expression -> expression GT expression
Rule 41    expression -> expression LTE expression
Rule 42    expression -> expression LT expression
Rule 43    expression -> NEGATION expression
Rule 44    expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

ADDITION             : 25
ASSIGN               : 8
BOOLEAN              : 23
COMMA                : 11 17
CONJUNCTION          : 35
CONS                 : 34
DISJUNCTION          : 36
DIVISION             : 29
EQUAL                : 37
EXPONENTIATION       : 30
GT                   : 40
GTE                  : 39
INDEXTUPES           : 9
INTDIVISION          : 32
INT_VAL              : 20
LBRACE               : 2
LBRACKET             : 13 14
LPAREN               : 7 9 10 44
LT                   : 42
LTE                  : 41
MEMBER               : 33
MODULUS              : 31
MULTIPLICATION       : 28
NAME                 : 24
NEGATION             : 43
NEQUAL               : 38
PRINT                : 7
RBRACE               : 2
RBRACKET             : 13 14
REAL_VAL             : 21
RPAREN               : 7 9 10 44
SEMICOLON            : 5 6
STRING               : 22
SUBTRACTION          : 26 27
error                : 

Nonterminals, with rules where they appear

empty                : 4 12 16 18
expression           : 5 7 8 8 9 11 13 13 15 17 25 25 26 26 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44
list                 : 14
list_tail            : 15 17
start                : 0
statement            : 3
statement-list       : 1 2 3
tuple                : 9 10 11
var_assign           : 6

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statement-list
    (2) statement-list -> . LBRACE statement-list RBRACE
    (3) statement-list -> . statement statement-list
    (4) statement-list -> . empty
    (5) statement -> . expression SEMICOLON
    (6) statement -> . var_assign SEMICOLON
    (19) empty -> .
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN
    (8) var_assign -> . expression ASSIGN expression

    LBRACE          shift and go to state 3
    $end            reduce using rule 19 (empty -> .)
    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    start                          shift and go to state 1
    statement-list                 shift and go to state 2
    statement                      shift and go to state 4
    empty                          shift and go to state 5
    expression                     shift and go to state 6
    var_assign                     shift and go to state 7

state 1

    (0) S' -> start .



state 2

    (1) start -> statement-list .

    $end            reduce using rule 1 (start -> statement-list .)


state 3

    (2) statement-list -> LBRACE . statement-list RBRACE
    (2) statement-list -> . LBRACE statement-list RBRACE
    (3) statement-list -> . statement statement-list
    (4) statement-list -> . empty
    (5) statement -> . expression SEMICOLON
    (6) statement -> . var_assign SEMICOLON
    (19) empty -> .
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN
    (8) var_assign -> . expression ASSIGN expression

    LBRACE          shift and go to state 3
    RBRACE          reduce using rule 19 (empty -> .)
    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    statement-list                 shift and go to state 19
    statement                      shift and go to state 4
    empty                          shift and go to state 5
    expression                     shift and go to state 6
    var_assign                     shift and go to state 7

state 4

    (3) statement-list -> statement . statement-list
    (2) statement-list -> . LBRACE statement-list RBRACE
    (3) statement-list -> . statement statement-list
    (4) statement-list -> . empty
    (5) statement -> . expression SEMICOLON
    (6) statement -> . var_assign SEMICOLON
    (19) empty -> .
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN
    (8) var_assign -> . expression ASSIGN expression

    LBRACE          shift and go to state 3
    $end            reduce using rule 19 (empty -> .)
    RBRACE          reduce using rule 19 (empty -> .)
    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    statement                      shift and go to state 4
    statement-list                 shift and go to state 20
    empty                          shift and go to state 5
    expression                     shift and go to state 6
    var_assign                     shift and go to state 7

state 5

    (4) statement-list -> empty .

    $end            reduce using rule 4 (statement-list -> empty .)
    RBRACE          reduce using rule 4 (statement-list -> empty .)


state 6

    (5) statement -> expression . SEMICOLON
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression
    (8) var_assign -> expression . ASSIGN expression

    SEMICOLON       shift and go to state 21
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39
    ASSIGN          shift and go to state 40


state 7

    (6) statement -> var_assign . SEMICOLON

    SEMICOLON       shift and go to state 41


state 8

    (7) expression -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 42


state 9

    (10) expression -> LPAREN . tuple RPAREN
    (44) expression -> LPAREN . expression RPAREN
    (11) tuple -> . expression COMMA tuple
    (12) tuple -> . empty
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN
    (19) empty -> .

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18
    RPAREN          reduce using rule 19 (empty -> .)

    tuple                          shift and go to state 43
    expression                     shift and go to state 44
    empty                          shift and go to state 45

state 10

    (9) expression -> INDEXTUPES . expression LPAREN tuple RPAREN
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 46

state 11

    (14) expression -> LBRACKET . list RBRACKET
    (15) list -> . expression list_tail
    (16) list -> . empty
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN
    (19) empty -> .

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18
    RBRACKET        reduce using rule 19 (empty -> .)

    list                           shift and go to state 47
    expression                     shift and go to state 48
    empty                          shift and go to state 49

state 12

    (20) expression -> INT_VAL .

    SEMICOLON       reduce using rule 20 (expression -> INT_VAL .)
    LBRACKET        reduce using rule 20 (expression -> INT_VAL .)
    ADDITION        reduce using rule 20 (expression -> INT_VAL .)
    SUBTRACTION     reduce using rule 20 (expression -> INT_VAL .)
    MULTIPLICATION  reduce using rule 20 (expression -> INT_VAL .)
    DIVISION        reduce using rule 20 (expression -> INT_VAL .)
    EXPONENTIATION  reduce using rule 20 (expression -> INT_VAL .)
    MODULUS         reduce using rule 20 (expression -> INT_VAL .)
    INTDIVISION     reduce using rule 20 (expression -> INT_VAL .)
    MEMBER          reduce using rule 20 (expression -> INT_VAL .)
    CONS            reduce using rule 20 (expression -> INT_VAL .)
    CONJUNCTION     reduce using rule 20 (expression -> INT_VAL .)
    DISJUNCTION     reduce using rule 20 (expression -> INT_VAL .)
    EQUAL           reduce using rule 20 (expression -> INT_VAL .)
    NEQUAL          reduce using rule 20 (expression -> INT_VAL .)
    GTE             reduce using rule 20 (expression -> INT_VAL .)
    GT              reduce using rule 20 (expression -> INT_VAL .)
    LTE             reduce using rule 20 (expression -> INT_VAL .)
    LT              reduce using rule 20 (expression -> INT_VAL .)
    ASSIGN          reduce using rule 20 (expression -> INT_VAL .)
    RPAREN          reduce using rule 20 (expression -> INT_VAL .)
    COMMA           reduce using rule 20 (expression -> INT_VAL .)
    LPAREN          reduce using rule 20 (expression -> INT_VAL .)
    RBRACKET        reduce using rule 20 (expression -> INT_VAL .)


state 13

    (21) expression -> REAL_VAL .

    SEMICOLON       reduce using rule 21 (expression -> REAL_VAL .)
    LBRACKET        reduce using rule 21 (expression -> REAL_VAL .)
    ADDITION        reduce using rule 21 (expression -> REAL_VAL .)
    SUBTRACTION     reduce using rule 21 (expression -> REAL_VAL .)
    MULTIPLICATION  reduce using rule 21 (expression -> REAL_VAL .)
    DIVISION        reduce using rule 21 (expression -> REAL_VAL .)
    EXPONENTIATION  reduce using rule 21 (expression -> REAL_VAL .)
    MODULUS         reduce using rule 21 (expression -> REAL_VAL .)
    INTDIVISION     reduce using rule 21 (expression -> REAL_VAL .)
    MEMBER          reduce using rule 21 (expression -> REAL_VAL .)
    CONS            reduce using rule 21 (expression -> REAL_VAL .)
    CONJUNCTION     reduce using rule 21 (expression -> REAL_VAL .)
    DISJUNCTION     reduce using rule 21 (expression -> REAL_VAL .)
    EQUAL           reduce using rule 21 (expression -> REAL_VAL .)
    NEQUAL          reduce using rule 21 (expression -> REAL_VAL .)
    GTE             reduce using rule 21 (expression -> REAL_VAL .)
    GT              reduce using rule 21 (expression -> REAL_VAL .)
    LTE             reduce using rule 21 (expression -> REAL_VAL .)
    LT              reduce using rule 21 (expression -> REAL_VAL .)
    ASSIGN          reduce using rule 21 (expression -> REAL_VAL .)
    RPAREN          reduce using rule 21 (expression -> REAL_VAL .)
    COMMA           reduce using rule 21 (expression -> REAL_VAL .)
    LPAREN          reduce using rule 21 (expression -> REAL_VAL .)
    RBRACKET        reduce using rule 21 (expression -> REAL_VAL .)


state 14

    (22) expression -> STRING .

    SEMICOLON       reduce using rule 22 (expression -> STRING .)
    LBRACKET        reduce using rule 22 (expression -> STRING .)
    ADDITION        reduce using rule 22 (expression -> STRING .)
    SUBTRACTION     reduce using rule 22 (expression -> STRING .)
    MULTIPLICATION  reduce using rule 22 (expression -> STRING .)
    DIVISION        reduce using rule 22 (expression -> STRING .)
    EXPONENTIATION  reduce using rule 22 (expression -> STRING .)
    MODULUS         reduce using rule 22 (expression -> STRING .)
    INTDIVISION     reduce using rule 22 (expression -> STRING .)
    MEMBER          reduce using rule 22 (expression -> STRING .)
    CONS            reduce using rule 22 (expression -> STRING .)
    CONJUNCTION     reduce using rule 22 (expression -> STRING .)
    DISJUNCTION     reduce using rule 22 (expression -> STRING .)
    EQUAL           reduce using rule 22 (expression -> STRING .)
    NEQUAL          reduce using rule 22 (expression -> STRING .)
    GTE             reduce using rule 22 (expression -> STRING .)
    GT              reduce using rule 22 (expression -> STRING .)
    LTE             reduce using rule 22 (expression -> STRING .)
    LT              reduce using rule 22 (expression -> STRING .)
    ASSIGN          reduce using rule 22 (expression -> STRING .)
    RPAREN          reduce using rule 22 (expression -> STRING .)
    COMMA           reduce using rule 22 (expression -> STRING .)
    LPAREN          reduce using rule 22 (expression -> STRING .)
    RBRACKET        reduce using rule 22 (expression -> STRING .)


state 15

    (23) expression -> BOOLEAN .

    SEMICOLON       reduce using rule 23 (expression -> BOOLEAN .)
    LBRACKET        reduce using rule 23 (expression -> BOOLEAN .)
    ADDITION        reduce using rule 23 (expression -> BOOLEAN .)
    SUBTRACTION     reduce using rule 23 (expression -> BOOLEAN .)
    MULTIPLICATION  reduce using rule 23 (expression -> BOOLEAN .)
    DIVISION        reduce using rule 23 (expression -> BOOLEAN .)
    EXPONENTIATION  reduce using rule 23 (expression -> BOOLEAN .)
    MODULUS         reduce using rule 23 (expression -> BOOLEAN .)
    INTDIVISION     reduce using rule 23 (expression -> BOOLEAN .)
    MEMBER          reduce using rule 23 (expression -> BOOLEAN .)
    CONS            reduce using rule 23 (expression -> BOOLEAN .)
    CONJUNCTION     reduce using rule 23 (expression -> BOOLEAN .)
    DISJUNCTION     reduce using rule 23 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 23 (expression -> BOOLEAN .)
    NEQUAL          reduce using rule 23 (expression -> BOOLEAN .)
    GTE             reduce using rule 23 (expression -> BOOLEAN .)
    GT              reduce using rule 23 (expression -> BOOLEAN .)
    LTE             reduce using rule 23 (expression -> BOOLEAN .)
    LT              reduce using rule 23 (expression -> BOOLEAN .)
    ASSIGN          reduce using rule 23 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 23 (expression -> BOOLEAN .)
    COMMA           reduce using rule 23 (expression -> BOOLEAN .)
    LPAREN          reduce using rule 23 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 23 (expression -> BOOLEAN .)


state 16

    (24) expression -> NAME .

    SEMICOLON       reduce using rule 24 (expression -> NAME .)
    LBRACKET        reduce using rule 24 (expression -> NAME .)
    ADDITION        reduce using rule 24 (expression -> NAME .)
    SUBTRACTION     reduce using rule 24 (expression -> NAME .)
    MULTIPLICATION  reduce using rule 24 (expression -> NAME .)
    DIVISION        reduce using rule 24 (expression -> NAME .)
    EXPONENTIATION  reduce using rule 24 (expression -> NAME .)
    MODULUS         reduce using rule 24 (expression -> NAME .)
    INTDIVISION     reduce using rule 24 (expression -> NAME .)
    MEMBER          reduce using rule 24 (expression -> NAME .)
    CONS            reduce using rule 24 (expression -> NAME .)
    CONJUNCTION     reduce using rule 24 (expression -> NAME .)
    DISJUNCTION     reduce using rule 24 (expression -> NAME .)
    EQUAL           reduce using rule 24 (expression -> NAME .)
    NEQUAL          reduce using rule 24 (expression -> NAME .)
    GTE             reduce using rule 24 (expression -> NAME .)
    GT              reduce using rule 24 (expression -> NAME .)
    LTE             reduce using rule 24 (expression -> NAME .)
    LT              reduce using rule 24 (expression -> NAME .)
    ASSIGN          reduce using rule 24 (expression -> NAME .)
    RPAREN          reduce using rule 24 (expression -> NAME .)
    COMMA           reduce using rule 24 (expression -> NAME .)
    LPAREN          reduce using rule 24 (expression -> NAME .)
    RBRACKET        reduce using rule 24 (expression -> NAME .)


state 17

    (27) expression -> SUBTRACTION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 50

state 18

    (43) expression -> NEGATION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 51

state 19

    (2) statement-list -> LBRACE statement-list . RBRACE

    RBRACE          shift and go to state 52


state 20

    (3) statement-list -> statement statement-list .

    $end            reduce using rule 3 (statement-list -> statement statement-list .)
    RBRACE          reduce using rule 3 (statement-list -> statement statement-list .)


state 21

    (5) statement -> expression SEMICOLON .

    LBRACE          reduce using rule 5 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 5 (statement -> expression SEMICOLON .)
    INDEXTUPES      reduce using rule 5 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 5 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 5 (statement -> expression SEMICOLON .)
    INT_VAL         reduce using rule 5 (statement -> expression SEMICOLON .)
    REAL_VAL        reduce using rule 5 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 5 (statement -> expression SEMICOLON .)
    BOOLEAN         reduce using rule 5 (statement -> expression SEMICOLON .)
    NAME            reduce using rule 5 (statement -> expression SEMICOLON .)
    SUBTRACTION     reduce using rule 5 (statement -> expression SEMICOLON .)
    NEGATION        reduce using rule 5 (statement -> expression SEMICOLON .)
    $end            reduce using rule 5 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> expression SEMICOLON .)


state 22

    (13) expression -> expression LBRACKET . expression RBRACKET
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 53

state 23

    (25) expression -> expression ADDITION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 54

state 24

    (26) expression -> expression SUBTRACTION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 55

state 25

    (28) expression -> expression MULTIPLICATION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 56

state 26

    (29) expression -> expression DIVISION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 57

state 27

    (30) expression -> expression EXPONENTIATION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 58

state 28

    (31) expression -> expression MODULUS . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 59

state 29

    (32) expression -> expression INTDIVISION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 60

state 30

    (33) expression -> expression MEMBER . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 61

state 31

    (34) expression -> expression CONS . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 62

state 32

    (35) expression -> expression CONJUNCTION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 63

state 33

    (36) expression -> expression DISJUNCTION . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 64

state 34

    (37) expression -> expression EQUAL . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 65

state 35

    (38) expression -> expression NEQUAL . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 66

state 36

    (39) expression -> expression GTE . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 67

state 37

    (40) expression -> expression GT . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 68

state 38

    (41) expression -> expression LTE . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 69

state 39

    (42) expression -> expression LT . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 70

state 40

    (8) var_assign -> expression ASSIGN . expression
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 71

state 41

    (6) statement -> var_assign SEMICOLON .

    LBRACE          reduce using rule 6 (statement -> var_assign SEMICOLON .)
    PRINT           reduce using rule 6 (statement -> var_assign SEMICOLON .)
    INDEXTUPES      reduce using rule 6 (statement -> var_assign SEMICOLON .)
    LPAREN          reduce using rule 6 (statement -> var_assign SEMICOLON .)
    LBRACKET        reduce using rule 6 (statement -> var_assign SEMICOLON .)
    INT_VAL         reduce using rule 6 (statement -> var_assign SEMICOLON .)
    REAL_VAL        reduce using rule 6 (statement -> var_assign SEMICOLON .)
    STRING          reduce using rule 6 (statement -> var_assign SEMICOLON .)
    BOOLEAN         reduce using rule 6 (statement -> var_assign SEMICOLON .)
    NAME            reduce using rule 6 (statement -> var_assign SEMICOLON .)
    SUBTRACTION     reduce using rule 6 (statement -> var_assign SEMICOLON .)
    NEGATION        reduce using rule 6 (statement -> var_assign SEMICOLON .)
    $end            reduce using rule 6 (statement -> var_assign SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> var_assign SEMICOLON .)


state 42

    (7) expression -> PRINT LPAREN . expression RPAREN
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 72

state 43

    (10) expression -> LPAREN tuple . RPAREN

    RPAREN          shift and go to state 73


state 44

    (44) expression -> LPAREN expression . RPAREN
    (11) tuple -> expression . COMMA tuple
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    RPAREN          shift and go to state 74
    COMMA           shift and go to state 75
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39


state 45

    (12) tuple -> empty .

    RPAREN          reduce using rule 12 (tuple -> empty .)


state 46

    (9) expression -> INDEXTUPES expression . LPAREN tuple RPAREN
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    LPAREN          shift and go to state 76
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39


state 47

    (14) expression -> LBRACKET list . RBRACKET

    RBRACKET        shift and go to state 77


state 48

    (15) list -> expression . list_tail
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression
    (17) list_tail -> . COMMA expression list_tail
    (18) list_tail -> . empty
    (19) empty -> .

    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39
    COMMA           shift and go to state 79
    RBRACKET        reduce using rule 19 (empty -> .)

    list_tail                      shift and go to state 78
    empty                          shift and go to state 80

state 49

    (16) list -> empty .

    RBRACKET        reduce using rule 16 (list -> empty .)


state 50

    (27) expression -> SUBTRACTION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 27 (expression -> SUBTRACTION expression .)
    LBRACKET        reduce using rule 27 (expression -> SUBTRACTION expression .)
    ADDITION        reduce using rule 27 (expression -> SUBTRACTION expression .)
    SUBTRACTION     reduce using rule 27 (expression -> SUBTRACTION expression .)
    MULTIPLICATION  reduce using rule 27 (expression -> SUBTRACTION expression .)
    DIVISION        reduce using rule 27 (expression -> SUBTRACTION expression .)
    EXPONENTIATION  reduce using rule 27 (expression -> SUBTRACTION expression .)
    MODULUS         reduce using rule 27 (expression -> SUBTRACTION expression .)
    INTDIVISION     reduce using rule 27 (expression -> SUBTRACTION expression .)
    MEMBER          reduce using rule 27 (expression -> SUBTRACTION expression .)
    CONS            reduce using rule 27 (expression -> SUBTRACTION expression .)
    CONJUNCTION     reduce using rule 27 (expression -> SUBTRACTION expression .)
    DISJUNCTION     reduce using rule 27 (expression -> SUBTRACTION expression .)
    EQUAL           reduce using rule 27 (expression -> SUBTRACTION expression .)
    NEQUAL          reduce using rule 27 (expression -> SUBTRACTION expression .)
    GTE             reduce using rule 27 (expression -> SUBTRACTION expression .)
    GT              reduce using rule 27 (expression -> SUBTRACTION expression .)
    LTE             reduce using rule 27 (expression -> SUBTRACTION expression .)
    LT              reduce using rule 27 (expression -> SUBTRACTION expression .)
    ASSIGN          reduce using rule 27 (expression -> SUBTRACTION expression .)
    RPAREN          reduce using rule 27 (expression -> SUBTRACTION expression .)
    COMMA           reduce using rule 27 (expression -> SUBTRACTION expression .)
    LPAREN          reduce using rule 27 (expression -> SUBTRACTION expression .)
    RBRACKET        reduce using rule 27 (expression -> SUBTRACTION expression .)

  ! LBRACKET        [ shift and go to state 22 ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MULTIPLICATION  [ shift and go to state 25 ]
  ! DIVISION        [ shift and go to state 26 ]
  ! EXPONENTIATION  [ shift and go to state 27 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! INTDIVISION     [ shift and go to state 29 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONS            [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 51

    (43) expression -> NEGATION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 43 (expression -> NEGATION expression .)
    CONJUNCTION     reduce using rule 43 (expression -> NEGATION expression .)
    DISJUNCTION     reduce using rule 43 (expression -> NEGATION expression .)
    EQUAL           reduce using rule 43 (expression -> NEGATION expression .)
    NEQUAL          reduce using rule 43 (expression -> NEGATION expression .)
    GTE             reduce using rule 43 (expression -> NEGATION expression .)
    GT              reduce using rule 43 (expression -> NEGATION expression .)
    LTE             reduce using rule 43 (expression -> NEGATION expression .)
    LT              reduce using rule 43 (expression -> NEGATION expression .)
    ASSIGN          reduce using rule 43 (expression -> NEGATION expression .)
    RPAREN          reduce using rule 43 (expression -> NEGATION expression .)
    COMMA           reduce using rule 43 (expression -> NEGATION expression .)
    LPAREN          reduce using rule 43 (expression -> NEGATION expression .)
    RBRACKET        reduce using rule 43 (expression -> NEGATION expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! ADDITION        [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! SUBTRACTION     [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! DIVISION        [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! MODULUS         [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! INTDIVISION     [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! MEMBER          [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! CONS            [ reduce using rule 43 (expression -> NEGATION expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 52

    (2) statement-list -> LBRACE statement-list RBRACE .

    $end            reduce using rule 2 (statement-list -> LBRACE statement-list RBRACE .)
    RBRACE          reduce using rule 2 (statement-list -> LBRACE statement-list RBRACE .)


state 53

    (13) expression -> expression LBRACKET expression . RBRACKET
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    RBRACKET        shift and go to state 81
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39


state 54

    (25) expression -> expression ADDITION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 25 (expression -> expression ADDITION expression .)
    ADDITION        reduce using rule 25 (expression -> expression ADDITION expression .)
    SUBTRACTION     reduce using rule 25 (expression -> expression ADDITION expression .)
    MEMBER          reduce using rule 25 (expression -> expression ADDITION expression .)
    CONJUNCTION     reduce using rule 25 (expression -> expression ADDITION expression .)
    DISJUNCTION     reduce using rule 25 (expression -> expression ADDITION expression .)
    EQUAL           reduce using rule 25 (expression -> expression ADDITION expression .)
    NEQUAL          reduce using rule 25 (expression -> expression ADDITION expression .)
    GTE             reduce using rule 25 (expression -> expression ADDITION expression .)
    GT              reduce using rule 25 (expression -> expression ADDITION expression .)
    LTE             reduce using rule 25 (expression -> expression ADDITION expression .)
    LT              reduce using rule 25 (expression -> expression ADDITION expression .)
    ASSIGN          reduce using rule 25 (expression -> expression ADDITION expression .)
    RPAREN          reduce using rule 25 (expression -> expression ADDITION expression .)
    COMMA           reduce using rule 25 (expression -> expression ADDITION expression .)
    LPAREN          reduce using rule 25 (expression -> expression ADDITION expression .)
    RBRACKET        reduce using rule 25 (expression -> expression ADDITION expression .)
    LBRACKET        shift and go to state 22
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 25 (expression -> expression ADDITION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 25 (expression -> expression ADDITION expression .) ]
  ! DIVISION        [ reduce using rule 25 (expression -> expression ADDITION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 25 (expression -> expression ADDITION expression .) ]
  ! MODULUS         [ reduce using rule 25 (expression -> expression ADDITION expression .) ]
  ! INTDIVISION     [ reduce using rule 25 (expression -> expression ADDITION expression .) ]
  ! CONS            [ reduce using rule 25 (expression -> expression ADDITION expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 55

    (26) expression -> expression SUBTRACTION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    ADDITION        reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    SUBTRACTION     reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    MEMBER          reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    CONJUNCTION     reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    DISJUNCTION     reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    EQUAL           reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    NEQUAL          reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    GTE             reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    GT              reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    LTE             reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    LT              reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    ASSIGN          reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    RPAREN          reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    COMMA           reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    LPAREN          reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    RBRACKET        reduce using rule 26 (expression -> expression SUBTRACTION expression .)
    LBRACKET        shift and go to state 22
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 26 (expression -> expression SUBTRACTION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 26 (expression -> expression SUBTRACTION expression .) ]
  ! DIVISION        [ reduce using rule 26 (expression -> expression SUBTRACTION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 26 (expression -> expression SUBTRACTION expression .) ]
  ! MODULUS         [ reduce using rule 26 (expression -> expression SUBTRACTION expression .) ]
  ! INTDIVISION     [ reduce using rule 26 (expression -> expression SUBTRACTION expression .) ]
  ! CONS            [ reduce using rule 26 (expression -> expression SUBTRACTION expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 56

    (28) expression -> expression MULTIPLICATION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    ADDITION        reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    SUBTRACTION     reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    MULTIPLICATION  reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    DIVISION        reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    MODULUS         reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    INTDIVISION     reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    MEMBER          reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    CONJUNCTION     reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    DISJUNCTION     reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    EQUAL           reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    NEQUAL          reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    GTE             reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    GT              reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    LTE             reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    LT              reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    ASSIGN          reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    RPAREN          reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    COMMA           reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    LPAREN          reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    RBRACKET        reduce using rule 28 (expression -> expression MULTIPLICATION expression .)
    LBRACKET        shift and go to state 22
    EXPONENTIATION  shift and go to state 27
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 28 (expression -> expression MULTIPLICATION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 28 (expression -> expression MULTIPLICATION expression .) ]
  ! CONS            [ reduce using rule 28 (expression -> expression MULTIPLICATION expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MULTIPLICATION  [ shift and go to state 25 ]
  ! DIVISION        [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! INTDIVISION     [ shift and go to state 29 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 57

    (29) expression -> expression DIVISION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 29 (expression -> expression DIVISION expression .)
    ADDITION        reduce using rule 29 (expression -> expression DIVISION expression .)
    SUBTRACTION     reduce using rule 29 (expression -> expression DIVISION expression .)
    MULTIPLICATION  reduce using rule 29 (expression -> expression DIVISION expression .)
    DIVISION        reduce using rule 29 (expression -> expression DIVISION expression .)
    MODULUS         reduce using rule 29 (expression -> expression DIVISION expression .)
    INTDIVISION     reduce using rule 29 (expression -> expression DIVISION expression .)
    MEMBER          reduce using rule 29 (expression -> expression DIVISION expression .)
    CONJUNCTION     reduce using rule 29 (expression -> expression DIVISION expression .)
    DISJUNCTION     reduce using rule 29 (expression -> expression DIVISION expression .)
    EQUAL           reduce using rule 29 (expression -> expression DIVISION expression .)
    NEQUAL          reduce using rule 29 (expression -> expression DIVISION expression .)
    GTE             reduce using rule 29 (expression -> expression DIVISION expression .)
    GT              reduce using rule 29 (expression -> expression DIVISION expression .)
    LTE             reduce using rule 29 (expression -> expression DIVISION expression .)
    LT              reduce using rule 29 (expression -> expression DIVISION expression .)
    ASSIGN          reduce using rule 29 (expression -> expression DIVISION expression .)
    RPAREN          reduce using rule 29 (expression -> expression DIVISION expression .)
    COMMA           reduce using rule 29 (expression -> expression DIVISION expression .)
    LPAREN          reduce using rule 29 (expression -> expression DIVISION expression .)
    RBRACKET        reduce using rule 29 (expression -> expression DIVISION expression .)
    LBRACKET        shift and go to state 22
    EXPONENTIATION  shift and go to state 27
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 29 (expression -> expression DIVISION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 29 (expression -> expression DIVISION expression .) ]
  ! CONS            [ reduce using rule 29 (expression -> expression DIVISION expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MULTIPLICATION  [ shift and go to state 25 ]
  ! DIVISION        [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! INTDIVISION     [ shift and go to state 29 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 58

    (30) expression -> expression EXPONENTIATION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    ADDITION        reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    SUBTRACTION     reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    MULTIPLICATION  reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    DIVISION        reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    MODULUS         reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    INTDIVISION     reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    MEMBER          reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    CONS            reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    CONJUNCTION     reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    DISJUNCTION     reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    EQUAL           reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    NEQUAL          reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    GTE             reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    GT              reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    LTE             reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    LT              reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    ASSIGN          reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    RPAREN          reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    COMMA           reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    LPAREN          reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    RBRACKET        reduce using rule 30 (expression -> expression EXPONENTIATION expression .)
    LBRACKET        shift and go to state 22
    EXPONENTIATION  shift and go to state 27

  ! LBRACKET        [ reduce using rule 30 (expression -> expression EXPONENTIATION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 30 (expression -> expression EXPONENTIATION expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MULTIPLICATION  [ shift and go to state 25 ]
  ! DIVISION        [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! INTDIVISION     [ shift and go to state 29 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONS            [ shift and go to state 31 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 59

    (31) expression -> expression MODULUS expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 31 (expression -> expression MODULUS expression .)
    ADDITION        reduce using rule 31 (expression -> expression MODULUS expression .)
    SUBTRACTION     reduce using rule 31 (expression -> expression MODULUS expression .)
    MULTIPLICATION  reduce using rule 31 (expression -> expression MODULUS expression .)
    DIVISION        reduce using rule 31 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 31 (expression -> expression MODULUS expression .)
    INTDIVISION     reduce using rule 31 (expression -> expression MODULUS expression .)
    MEMBER          reduce using rule 31 (expression -> expression MODULUS expression .)
    CONJUNCTION     reduce using rule 31 (expression -> expression MODULUS expression .)
    DISJUNCTION     reduce using rule 31 (expression -> expression MODULUS expression .)
    EQUAL           reduce using rule 31 (expression -> expression MODULUS expression .)
    NEQUAL          reduce using rule 31 (expression -> expression MODULUS expression .)
    GTE             reduce using rule 31 (expression -> expression MODULUS expression .)
    GT              reduce using rule 31 (expression -> expression MODULUS expression .)
    LTE             reduce using rule 31 (expression -> expression MODULUS expression .)
    LT              reduce using rule 31 (expression -> expression MODULUS expression .)
    ASSIGN          reduce using rule 31 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MODULUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MODULUS expression .)
    LPAREN          reduce using rule 31 (expression -> expression MODULUS expression .)
    RBRACKET        reduce using rule 31 (expression -> expression MODULUS expression .)
    LBRACKET        shift and go to state 22
    EXPONENTIATION  shift and go to state 27
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 31 (expression -> expression MODULUS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 31 (expression -> expression MODULUS expression .) ]
  ! CONS            [ reduce using rule 31 (expression -> expression MODULUS expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MULTIPLICATION  [ shift and go to state 25 ]
  ! DIVISION        [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! INTDIVISION     [ shift and go to state 29 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 60

    (32) expression -> expression INTDIVISION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 32 (expression -> expression INTDIVISION expression .)
    ADDITION        reduce using rule 32 (expression -> expression INTDIVISION expression .)
    SUBTRACTION     reduce using rule 32 (expression -> expression INTDIVISION expression .)
    MULTIPLICATION  reduce using rule 32 (expression -> expression INTDIVISION expression .)
    DIVISION        reduce using rule 32 (expression -> expression INTDIVISION expression .)
    MODULUS         reduce using rule 32 (expression -> expression INTDIVISION expression .)
    INTDIVISION     reduce using rule 32 (expression -> expression INTDIVISION expression .)
    MEMBER          reduce using rule 32 (expression -> expression INTDIVISION expression .)
    CONJUNCTION     reduce using rule 32 (expression -> expression INTDIVISION expression .)
    DISJUNCTION     reduce using rule 32 (expression -> expression INTDIVISION expression .)
    EQUAL           reduce using rule 32 (expression -> expression INTDIVISION expression .)
    NEQUAL          reduce using rule 32 (expression -> expression INTDIVISION expression .)
    GTE             reduce using rule 32 (expression -> expression INTDIVISION expression .)
    GT              reduce using rule 32 (expression -> expression INTDIVISION expression .)
    LTE             reduce using rule 32 (expression -> expression INTDIVISION expression .)
    LT              reduce using rule 32 (expression -> expression INTDIVISION expression .)
    ASSIGN          reduce using rule 32 (expression -> expression INTDIVISION expression .)
    RPAREN          reduce using rule 32 (expression -> expression INTDIVISION expression .)
    COMMA           reduce using rule 32 (expression -> expression INTDIVISION expression .)
    LPAREN          reduce using rule 32 (expression -> expression INTDIVISION expression .)
    RBRACKET        reduce using rule 32 (expression -> expression INTDIVISION expression .)
    LBRACKET        shift and go to state 22
    EXPONENTIATION  shift and go to state 27
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 32 (expression -> expression INTDIVISION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 32 (expression -> expression INTDIVISION expression .) ]
  ! CONS            [ reduce using rule 32 (expression -> expression INTDIVISION expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MULTIPLICATION  [ shift and go to state 25 ]
  ! DIVISION        [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! INTDIVISION     [ shift and go to state 29 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 61

    (33) expression -> expression MEMBER expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 33 (expression -> expression MEMBER expression .)
    MEMBER          reduce using rule 33 (expression -> expression MEMBER expression .)
    CONJUNCTION     reduce using rule 33 (expression -> expression MEMBER expression .)
    DISJUNCTION     reduce using rule 33 (expression -> expression MEMBER expression .)
    EQUAL           reduce using rule 33 (expression -> expression MEMBER expression .)
    NEQUAL          reduce using rule 33 (expression -> expression MEMBER expression .)
    GTE             reduce using rule 33 (expression -> expression MEMBER expression .)
    GT              reduce using rule 33 (expression -> expression MEMBER expression .)
    LTE             reduce using rule 33 (expression -> expression MEMBER expression .)
    LT              reduce using rule 33 (expression -> expression MEMBER expression .)
    ASSIGN          reduce using rule 33 (expression -> expression MEMBER expression .)
    RPAREN          reduce using rule 33 (expression -> expression MEMBER expression .)
    COMMA           reduce using rule 33 (expression -> expression MEMBER expression .)
    LPAREN          reduce using rule 33 (expression -> expression MEMBER expression .)
    RBRACKET        reduce using rule 33 (expression -> expression MEMBER expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! ADDITION        [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! SUBTRACTION     [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! MULTIPLICATION  [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! DIVISION        [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! EXPONENTIATION  [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! MODULUS         [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! INTDIVISION     [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! CONS            [ reduce using rule 33 (expression -> expression MEMBER expression .) ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 62

    (34) expression -> expression CONS expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 34 (expression -> expression CONS expression .)
    ADDITION        reduce using rule 34 (expression -> expression CONS expression .)
    SUBTRACTION     reduce using rule 34 (expression -> expression CONS expression .)
    MULTIPLICATION  reduce using rule 34 (expression -> expression CONS expression .)
    DIVISION        reduce using rule 34 (expression -> expression CONS expression .)
    MODULUS         reduce using rule 34 (expression -> expression CONS expression .)
    INTDIVISION     reduce using rule 34 (expression -> expression CONS expression .)
    MEMBER          reduce using rule 34 (expression -> expression CONS expression .)
    CONJUNCTION     reduce using rule 34 (expression -> expression CONS expression .)
    DISJUNCTION     reduce using rule 34 (expression -> expression CONS expression .)
    EQUAL           reduce using rule 34 (expression -> expression CONS expression .)
    NEQUAL          reduce using rule 34 (expression -> expression CONS expression .)
    GTE             reduce using rule 34 (expression -> expression CONS expression .)
    GT              reduce using rule 34 (expression -> expression CONS expression .)
    LTE             reduce using rule 34 (expression -> expression CONS expression .)
    LT              reduce using rule 34 (expression -> expression CONS expression .)
    ASSIGN          reduce using rule 34 (expression -> expression CONS expression .)
    RPAREN          reduce using rule 34 (expression -> expression CONS expression .)
    COMMA           reduce using rule 34 (expression -> expression CONS expression .)
    LPAREN          reduce using rule 34 (expression -> expression CONS expression .)
    RBRACKET        reduce using rule 34 (expression -> expression CONS expression .)
    LBRACKET        shift and go to state 22
    EXPONENTIATION  shift and go to state 27
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! CONS            [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! ADDITION        [ shift and go to state 23 ]
  ! SUBTRACTION     [ shift and go to state 24 ]
  ! MULTIPLICATION  [ shift and go to state 25 ]
  ! DIVISION        [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! INTDIVISION     [ shift and go to state 29 ]
  ! MEMBER          [ shift and go to state 30 ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 63

    (35) expression -> expression CONJUNCTION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    CONJUNCTION     reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    DISJUNCTION     reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    ASSIGN          reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    RPAREN          reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    COMMA           reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    LPAREN          reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    RBRACKET        reduce using rule 35 (expression -> expression CONJUNCTION expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39

  ! LBRACKET        [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! ADDITION        [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! SUBTRACTION     [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! DIVISION        [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! MODULUS         [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! INTDIVISION     [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! MEMBER          [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! CONS            [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! EQUAL           [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! NEQUAL          [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! GTE             [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! GT              [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! LTE             [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! LT              [ reduce using rule 35 (expression -> expression CONJUNCTION expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]


state 64

    (36) expression -> expression DISJUNCTION expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 36 (expression -> expression DISJUNCTION expression .)
    DISJUNCTION     reduce using rule 36 (expression -> expression DISJUNCTION expression .)
    ASSIGN          reduce using rule 36 (expression -> expression DISJUNCTION expression .)
    RPAREN          reduce using rule 36 (expression -> expression DISJUNCTION expression .)
    COMMA           reduce using rule 36 (expression -> expression DISJUNCTION expression .)
    LPAREN          reduce using rule 36 (expression -> expression DISJUNCTION expression .)
    RBRACKET        reduce using rule 36 (expression -> expression DISJUNCTION expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39

  ! LBRACKET        [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! ADDITION        [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! SUBTRACTION     [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! DIVISION        [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! MODULUS         [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! INTDIVISION     [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! MEMBER          [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! CONS            [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! CONJUNCTION     [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! EQUAL           [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! NEQUAL          [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! GTE             [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! GT              [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! LTE             [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! LT              [ reduce using rule 36 (expression -> expression DISJUNCTION expression .) ]
  ! DISJUNCTION     [ shift and go to state 33 ]


state 65

    (37) expression -> expression EQUAL expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 37 (expression -> expression EQUAL expression .)
    CONJUNCTION     reduce using rule 37 (expression -> expression EQUAL expression .)
    DISJUNCTION     reduce using rule 37 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 37 (expression -> expression EQUAL expression .)
    NEQUAL          reduce using rule 37 (expression -> expression EQUAL expression .)
    GTE             reduce using rule 37 (expression -> expression EQUAL expression .)
    GT              reduce using rule 37 (expression -> expression EQUAL expression .)
    LTE             reduce using rule 37 (expression -> expression EQUAL expression .)
    LT              reduce using rule 37 (expression -> expression EQUAL expression .)
    ASSIGN          reduce using rule 37 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 37 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 37 (expression -> expression EQUAL expression .)
    LPAREN          reduce using rule 37 (expression -> expression EQUAL expression .)
    RBRACKET        reduce using rule 37 (expression -> expression EQUAL expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! ADDITION        [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! SUBTRACTION     [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! MULTIPLICATION  [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! DIVISION        [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! EXPONENTIATION  [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! INTDIVISION     [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! MEMBER          [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! CONS            [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 66

    (38) expression -> expression NEQUAL expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 38 (expression -> expression NEQUAL expression .)
    CONJUNCTION     reduce using rule 38 (expression -> expression NEQUAL expression .)
    DISJUNCTION     reduce using rule 38 (expression -> expression NEQUAL expression .)
    EQUAL           reduce using rule 38 (expression -> expression NEQUAL expression .)
    NEQUAL          reduce using rule 38 (expression -> expression NEQUAL expression .)
    GTE             reduce using rule 38 (expression -> expression NEQUAL expression .)
    GT              reduce using rule 38 (expression -> expression NEQUAL expression .)
    LTE             reduce using rule 38 (expression -> expression NEQUAL expression .)
    LT              reduce using rule 38 (expression -> expression NEQUAL expression .)
    ASSIGN          reduce using rule 38 (expression -> expression NEQUAL expression .)
    RPAREN          reduce using rule 38 (expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 38 (expression -> expression NEQUAL expression .)
    LPAREN          reduce using rule 38 (expression -> expression NEQUAL expression .)
    RBRACKET        reduce using rule 38 (expression -> expression NEQUAL expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! ADDITION        [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! SUBTRACTION     [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! MULTIPLICATION  [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! DIVISION        [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! EXPONENTIATION  [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! MODULUS         [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! INTDIVISION     [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! MEMBER          [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! CONS            [ reduce using rule 38 (expression -> expression NEQUAL expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 67

    (39) expression -> expression GTE expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 39 (expression -> expression GTE expression .)
    CONJUNCTION     reduce using rule 39 (expression -> expression GTE expression .)
    DISJUNCTION     reduce using rule 39 (expression -> expression GTE expression .)
    EQUAL           reduce using rule 39 (expression -> expression GTE expression .)
    NEQUAL          reduce using rule 39 (expression -> expression GTE expression .)
    GTE             reduce using rule 39 (expression -> expression GTE expression .)
    GT              reduce using rule 39 (expression -> expression GTE expression .)
    LTE             reduce using rule 39 (expression -> expression GTE expression .)
    LT              reduce using rule 39 (expression -> expression GTE expression .)
    ASSIGN          reduce using rule 39 (expression -> expression GTE expression .)
    RPAREN          reduce using rule 39 (expression -> expression GTE expression .)
    COMMA           reduce using rule 39 (expression -> expression GTE expression .)
    LPAREN          reduce using rule 39 (expression -> expression GTE expression .)
    RBRACKET        reduce using rule 39 (expression -> expression GTE expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! ADDITION        [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! SUBTRACTION     [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! MULTIPLICATION  [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! DIVISION        [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! EXPONENTIATION  [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! MODULUS         [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! INTDIVISION     [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! MEMBER          [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! CONS            [ reduce using rule 39 (expression -> expression GTE expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 68

    (40) expression -> expression GT expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 40 (expression -> expression GT expression .)
    CONJUNCTION     reduce using rule 40 (expression -> expression GT expression .)
    DISJUNCTION     reduce using rule 40 (expression -> expression GT expression .)
    EQUAL           reduce using rule 40 (expression -> expression GT expression .)
    NEQUAL          reduce using rule 40 (expression -> expression GT expression .)
    GTE             reduce using rule 40 (expression -> expression GT expression .)
    GT              reduce using rule 40 (expression -> expression GT expression .)
    LTE             reduce using rule 40 (expression -> expression GT expression .)
    LT              reduce using rule 40 (expression -> expression GT expression .)
    ASSIGN          reduce using rule 40 (expression -> expression GT expression .)
    RPAREN          reduce using rule 40 (expression -> expression GT expression .)
    COMMA           reduce using rule 40 (expression -> expression GT expression .)
    LPAREN          reduce using rule 40 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 40 (expression -> expression GT expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! ADDITION        [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! SUBTRACTION     [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! MULTIPLICATION  [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! DIVISION        [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! EXPONENTIATION  [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! MODULUS         [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! INTDIVISION     [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! MEMBER          [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! CONS            [ reduce using rule 40 (expression -> expression GT expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 69

    (41) expression -> expression LTE expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 41 (expression -> expression LTE expression .)
    CONJUNCTION     reduce using rule 41 (expression -> expression LTE expression .)
    DISJUNCTION     reduce using rule 41 (expression -> expression LTE expression .)
    EQUAL           reduce using rule 41 (expression -> expression LTE expression .)
    NEQUAL          reduce using rule 41 (expression -> expression LTE expression .)
    GTE             reduce using rule 41 (expression -> expression LTE expression .)
    GT              reduce using rule 41 (expression -> expression LTE expression .)
    LTE             reduce using rule 41 (expression -> expression LTE expression .)
    LT              reduce using rule 41 (expression -> expression LTE expression .)
    ASSIGN          reduce using rule 41 (expression -> expression LTE expression .)
    RPAREN          reduce using rule 41 (expression -> expression LTE expression .)
    COMMA           reduce using rule 41 (expression -> expression LTE expression .)
    LPAREN          reduce using rule 41 (expression -> expression LTE expression .)
    RBRACKET        reduce using rule 41 (expression -> expression LTE expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! ADDITION        [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! SUBTRACTION     [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! MULTIPLICATION  [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! DIVISION        [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! EXPONENTIATION  [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! MODULUS         [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! INTDIVISION     [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! MEMBER          [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! CONS            [ reduce using rule 41 (expression -> expression LTE expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 70

    (42) expression -> expression LT expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 42 (expression -> expression LT expression .)
    CONJUNCTION     reduce using rule 42 (expression -> expression LT expression .)
    DISJUNCTION     reduce using rule 42 (expression -> expression LT expression .)
    EQUAL           reduce using rule 42 (expression -> expression LT expression .)
    NEQUAL          reduce using rule 42 (expression -> expression LT expression .)
    GTE             reduce using rule 42 (expression -> expression LT expression .)
    GT              reduce using rule 42 (expression -> expression LT expression .)
    LTE             reduce using rule 42 (expression -> expression LT expression .)
    LT              reduce using rule 42 (expression -> expression LT expression .)
    ASSIGN          reduce using rule 42 (expression -> expression LT expression .)
    RPAREN          reduce using rule 42 (expression -> expression LT expression .)
    COMMA           reduce using rule 42 (expression -> expression LT expression .)
    LPAREN          reduce using rule 42 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 42 (expression -> expression LT expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31

  ! LBRACKET        [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! ADDITION        [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! SUBTRACTION     [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! MULTIPLICATION  [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! DIVISION        [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! EXPONENTIATION  [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! MODULUS         [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! INTDIVISION     [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! MEMBER          [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! CONS            [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! CONJUNCTION     [ shift and go to state 32 ]
  ! DISJUNCTION     [ shift and go to state 33 ]
  ! EQUAL           [ shift and go to state 34 ]
  ! NEQUAL          [ shift and go to state 35 ]
  ! GTE             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]


state 71

    (8) var_assign -> expression ASSIGN expression .
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    SEMICOLON       reduce using rule 8 (var_assign -> expression ASSIGN expression .)
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39


state 72

    (7) expression -> PRINT LPAREN expression . RPAREN
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    RPAREN          shift and go to state 82
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39


state 73

    (10) expression -> LPAREN tuple RPAREN .

    SEMICOLON       reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    LBRACKET        reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    ADDITION        reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    SUBTRACTION     reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    MULTIPLICATION  reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    DIVISION        reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    EXPONENTIATION  reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    MODULUS         reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    INTDIVISION     reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    MEMBER          reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    CONS            reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    CONJUNCTION     reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    DISJUNCTION     reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    EQUAL           reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    NEQUAL          reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    GTE             reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    GT              reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    LTE             reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    LT              reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    ASSIGN          reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    RPAREN          reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    COMMA           reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    LPAREN          reduce using rule 10 (expression -> LPAREN tuple RPAREN .)
    RBRACKET        reduce using rule 10 (expression -> LPAREN tuple RPAREN .)


state 74

    (44) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    ADDITION        reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    SUBTRACTION     reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MULTIPLICATION  reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DIVISION        reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    EXPONENTIATION  reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    INTDIVISION     reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MEMBER          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    CONS            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    CONJUNCTION     reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DISJUNCTION     reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GTE             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LTE             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 44 (expression -> LPAREN expression RPAREN .)


state 75

    (11) tuple -> expression COMMA . tuple
    (11) tuple -> . expression COMMA tuple
    (12) tuple -> . empty
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN
    (19) empty -> .

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18
    RPAREN          reduce using rule 19 (empty -> .)

    expression                     shift and go to state 83
    tuple                          shift and go to state 84
    empty                          shift and go to state 45

state 76

    (9) expression -> INDEXTUPES expression LPAREN . tuple RPAREN
    (11) tuple -> . expression COMMA tuple
    (12) tuple -> . empty
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN
    (19) empty -> .

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18
    RPAREN          reduce using rule 19 (empty -> .)

    expression                     shift and go to state 83
    tuple                          shift and go to state 85
    empty                          shift and go to state 45

state 77

    (14) expression -> LBRACKET list RBRACKET .

    SEMICOLON       reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    LBRACKET        reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    ADDITION        reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    SUBTRACTION     reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    MULTIPLICATION  reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    DIVISION        reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    EXPONENTIATION  reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    MODULUS         reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    INTDIVISION     reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    MEMBER          reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    CONS            reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    CONJUNCTION     reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    DISJUNCTION     reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    EQUAL           reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    NEQUAL          reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    GTE             reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    GT              reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    LTE             reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    LT              reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    ASSIGN          reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    RPAREN          reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    COMMA           reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    LPAREN          reduce using rule 14 (expression -> LBRACKET list RBRACKET .)
    RBRACKET        reduce using rule 14 (expression -> LBRACKET list RBRACKET .)


state 78

    (15) list -> expression list_tail .

    RBRACKET        reduce using rule 15 (list -> expression list_tail .)


state 79

    (17) list_tail -> COMMA . expression list_tail
    (7) expression -> . PRINT LPAREN expression RPAREN
    (9) expression -> . INDEXTUPES expression LPAREN tuple RPAREN
    (10) expression -> . LPAREN tuple RPAREN
    (13) expression -> . expression LBRACKET expression RBRACKET
    (14) expression -> . LBRACKET list RBRACKET
    (20) expression -> . INT_VAL
    (21) expression -> . REAL_VAL
    (22) expression -> . STRING
    (23) expression -> . BOOLEAN
    (24) expression -> . NAME
    (25) expression -> . expression ADDITION expression
    (26) expression -> . expression SUBTRACTION expression
    (27) expression -> . SUBTRACTION expression
    (28) expression -> . expression MULTIPLICATION expression
    (29) expression -> . expression DIVISION expression
    (30) expression -> . expression EXPONENTIATION expression
    (31) expression -> . expression MODULUS expression
    (32) expression -> . expression INTDIVISION expression
    (33) expression -> . expression MEMBER expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression CONJUNCTION expression
    (36) expression -> . expression DISJUNCTION expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NEQUAL expression
    (39) expression -> . expression GTE expression
    (40) expression -> . expression GT expression
    (41) expression -> . expression LTE expression
    (42) expression -> . expression LT expression
    (43) expression -> . NEGATION expression
    (44) expression -> . LPAREN expression RPAREN

    PRINT           shift and go to state 8
    INDEXTUPES      shift and go to state 10
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 11
    INT_VAL         shift and go to state 12
    REAL_VAL        shift and go to state 13
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    NAME            shift and go to state 16
    SUBTRACTION     shift and go to state 17
    NEGATION        shift and go to state 18

    expression                     shift and go to state 86

state 80

    (18) list_tail -> empty .

    RBRACKET        reduce using rule 18 (list_tail -> empty .)


state 81

    (13) expression -> expression LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    ADDITION        reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    SUBTRACTION     reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    MULTIPLICATION  reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    DIVISION        reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    EXPONENTIATION  reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    MODULUS         reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    INTDIVISION     reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    MEMBER          reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    CONS            reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    CONJUNCTION     reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    DISJUNCTION     reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    NEQUAL          reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    GTE             reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    LTE             reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 13 (expression -> expression LBRACKET expression RBRACKET .)


state 82

    (7) expression -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    ADDITION        reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    SUBTRACTION     reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    MULTIPLICATION  reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    DIVISION        reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    EXPONENTIATION  reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    MODULUS         reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    INTDIVISION     reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    MEMBER          reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    CONS            reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    CONJUNCTION     reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    DISJUNCTION     reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    EQUAL           reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    GTE             reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    GT              reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    LTE             reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    LT              reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    COMMA           reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 7 (expression -> PRINT LPAREN expression RPAREN .)


state 83

    (11) tuple -> expression . COMMA tuple
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression

    COMMA           shift and go to state 75
    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39


state 84

    (11) tuple -> expression COMMA tuple .

    RPAREN          reduce using rule 11 (tuple -> expression COMMA tuple .)


state 85

    (9) expression -> INDEXTUPES expression LPAREN tuple . RPAREN

    RPAREN          shift and go to state 87


state 86

    (17) list_tail -> COMMA expression . list_tail
    (13) expression -> expression . LBRACKET expression RBRACKET
    (25) expression -> expression . ADDITION expression
    (26) expression -> expression . SUBTRACTION expression
    (28) expression -> expression . MULTIPLICATION expression
    (29) expression -> expression . DIVISION expression
    (30) expression -> expression . EXPONENTIATION expression
    (31) expression -> expression . MODULUS expression
    (32) expression -> expression . INTDIVISION expression
    (33) expression -> expression . MEMBER expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . CONJUNCTION expression
    (36) expression -> expression . DISJUNCTION expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NEQUAL expression
    (39) expression -> expression . GTE expression
    (40) expression -> expression . GT expression
    (41) expression -> expression . LTE expression
    (42) expression -> expression . LT expression
    (17) list_tail -> . COMMA expression list_tail
    (18) list_tail -> . empty
    (19) empty -> .

    LBRACKET        shift and go to state 22
    ADDITION        shift and go to state 23
    SUBTRACTION     shift and go to state 24
    MULTIPLICATION  shift and go to state 25
    DIVISION        shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    INTDIVISION     shift and go to state 29
    MEMBER          shift and go to state 30
    CONS            shift and go to state 31
    CONJUNCTION     shift and go to state 32
    DISJUNCTION     shift and go to state 33
    EQUAL           shift and go to state 34
    NEQUAL          shift and go to state 35
    GTE             shift and go to state 36
    GT              shift and go to state 37
    LTE             shift and go to state 38
    LT              shift and go to state 39
    COMMA           shift and go to state 79
    RBRACKET        reduce using rule 19 (empty -> .)

    list_tail                      shift and go to state 88
    empty                          shift and go to state 80

state 87

    (9) expression -> INDEXTUPES expression LPAREN tuple RPAREN .

    SEMICOLON       reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    LBRACKET        reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    ADDITION        reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    SUBTRACTION     reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    MULTIPLICATION  reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    DIVISION        reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    EXPONENTIATION  reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    MODULUS         reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    INTDIVISION     reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    MEMBER          reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    CONS            reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    CONJUNCTION     reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    DISJUNCTION     reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    EQUAL           reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    NEQUAL          reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    GTE             reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    GT              reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    LTE             reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    LT              reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    ASSIGN          reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    RPAREN          reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    COMMA           reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    LPAREN          reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)
    RBRACKET        reduce using rule 9 (expression -> INDEXTUPES expression LPAREN tuple RPAREN .)


state 88

    (17) list_tail -> COMMA expression list_tail .

    RBRACKET        reduce using rule 17 (list_tail -> COMMA expression list_tail .)

